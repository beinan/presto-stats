# GraphQL schema example
#
# https://gqlgen.com/getting-started/

scalar Map

type PrestoQuery {
  id: ID!
  batch: Batch!
  jsonStats: JsonStats!
}

type JsonStats {
  state: String!
  sql: String!
  queryStats: Map
  session: Map
  json: Map
  stages: [Stage!]!
}

type Batch {
  id: ID!
  project: Project!
  queries: [PrestoQuery!]!
}

type Project {
  id: ID!
  batches: [Batch!]!
}

type Query {
  projects: [Project!]!
  project(id: ID!): Project!
  batch(id: ID!, projectId: ID!): Batch
}

type Mutation {
  newProject(input: NewProject): Project!
  newBatch(input: NewBatch): Batch!
}

input NewBatch {
  id: String!
  projectId: String!
}

input NewProject {
  id: String!
}

type Stage {
  stage_id: ID!
  totalDrivers: Int!
  totalCpuTime: String!
  avgCpuTime: Float!
  totalBlockedTime: String!
  avgBlockedTime: Float!
  totalTasks: Int!
  tasks: [Task!]!
}

type Task {
  task_id: ID!
  createTime: String!
  endTime: String!
  elapsedTime: String!
  totalDrivers: Int!
  totalCpuTime: String!
  avgCpuTime: Float!
  totalBlockedTime: String!
  avgBlockedTime: Float!
  totalPipelines: Int!
  pipelines: [Pipeline!]!
}

type Pipeline {
  ppl_id: ID!
  firstStartTime: String!
  lastEndTime: String!
  totalDrivers: Int!
  totalCpuTime: String!
  avgCpuTime: Float!
  totalBlockedTime: String!
  avgBlockedTime: Float!
  totalOperators: Int!
  operators: [Operator!]!
}

type Operator {
  op_id: ID!
  operatorType: String!
  totalDrivers: Int!
  addInputWall: String!
  getOutputWall: String!
  finishWall: String!
  avgWall: Float!
}